
# use epsilon greedy action selector
seed : 0
run_name : "ResZ"
exp_name : "10gen_protoss"

action_selector: "epsilon_greedy"
epsilon_start: 1.0
epsilon_finish: 0.05
epsilon_anneal_time: 100000 # 500000 for 6h_vs_8z

runner: "parallel"
batch_size_run: 8 # batch_size_run=4, buffer_size = 2500, batch_size=64  for 3s5z_vs_3s6z
buffer_size: 5000
batch_size: 128

# update the target network every {} episodes
target_update_interval: 200
agent_output_type: "q"
learner: "dresq"
double_q: True  
mixer: "datten"
mixing_embed_dim: 32
hypernet_layers: 2
hypernet_embed: 64
negative_abs: True

# IQN specific parameters
agent: "iqn_rnn"
optimizer: "RMSProp" 
quantile_embed_dim: 64 # n in paper
n_quantiles: 8 # N in paper
n_target_quantiles: 8 # N' in paper
n_approx_quantiles: 32 # \hat{N} in paper, for approximating Q

central_mixing_embed_dim: 128
central_mac: "base_central_mac" #
mac : "resz_mac"
central_agent: "anyway" 

central_mixer: "ff"

# datten 
n_query_embedding_layer1: 64
n_query_embedding_layer2: 32
n_key_embedding_layer1: 32
n_head_embedding_layer1: 64
n_head_embedding_layer2: 4
n_attention_head: 4
n_constrant_value: 32
type: "weighted"
agent_own_state_size: True

td_lambda: 0.6
lr: 0.001  # 0.0005 in default

central_loss: 1
qmix_loss: 1

name: "ResZ"  